
## Reading the data
course1 = read.csv("bclust_sample_v2.csv",header =TRUE)

# Applying PCA
#install.packages('caret')
library(caret)
#install.packages('e1071')
library(e1071)
pca = preProcess(x = course1[,c(4:13)], method = 'pca', pcaComp = 2)
course1_pca = predict(pca, course1)

## Saaving the model and dataset
saveRDS(pca,file = "pca.rds")
saveRDS(course1,file = "course1.rds")
saveRDS(course1_pca,file = "course1_pca.rds")

# Using the dendrogram to find the optimal number of clusters
dendrogram = hclust(d = dist(course1_pca[,c(4,5)], method = 'euclidean'), method = 'ward.D')
plot(dendrogram,
     main = paste('Dendrogram'),
     xlab = 'Chapters',
     ylab = 'Euclidean distances')

# Fitting Hierarchical Clustering to the dataset
hc = hclust(d = dist(course1_pca[,c(4,5)], method = 'euclidean'), method = 'ward.D')
y_hc = cutree(hc, 3)

# Visualising the clusters
library(cluster)
clusplot(course1_pca[,c(4,5)],
         y_hc,
         lines = 0,
         shade = TRUE,
         color = TRUE,
         labels= 2,
         plotchar = FALSE,
         span = TRUE,
         main = paste('Clusters of chapters'),
         xlab = 'PC1',
         ylab = 'PC2')

# function to find medoid in cluster i
clust.centroid = function(i, dat, clusters) {
  ind = (clusters == i)
  colMeans(dat[ind,])
}

centroid = sapply(unique(y_hc), clust.centroid, course1[,c(4:13)], y_hc)
